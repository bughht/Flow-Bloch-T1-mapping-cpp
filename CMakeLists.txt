cmake_minimum_required(VERSION 3.0.0)
project(Flow-Bloch-T1-mapping VERSION 0.1.0)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

if(${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_BINARY_DIR})
    message(FATAL_ERROR "In-source builds not allowed. Please make a new directory (called a build directory) and run CMake from there. You may need to remove CMakeCache.txt. ")
endif()

# set(PYTHON3_INCLUDE"/home/honght/miniconda/envs/NUMERICAL/include/python3.7m")
# set(PYTHON3_LIBRARIES "/home/honght/miniconda/envs/NUMERICAL/lib/libpython3.7m.so")
# set(NumPy_INCLUDE_DIRS "/home/honght/miniconda/envs/NUMERICAL/lib/python3.7m/site-packages/numpy/core/include")
# set(Python3_FIND_STRATEGY LOCATION)
# find_package(Python3 COMPONENTS Interpreter Development NumPy REQUIRED)
# message(STATUS "Python3_INCLUDE_DIRS: ${Python3_INCLUDE_DIRS}")
# set(PYTHON_INCLUDE_DIRS "/home/honght/miniconda/envs/NUMERICAL/include/python3.8")
# set(PYTHON_LIBRARIES "/home/honght/miniconda/envs/NUMERICAL/lib/libpython3.8.so")
# find_package(PythonLibs REQUIRED)
find_package(Eigen3 3.3 REQUIRED NO_MODULE)
find_package(yaml-cpp REQUIRED)
set(OpenCV_DIR "/home/honght/Download/opencv-4.x/build")
find_package(OpenCV REQUIRED )
find_package(OpenMP REQUIRED)
set(Torch_DIR "/home/honght/libtorch/share/cmake/Torch")
set(CUDNN_INCLUDE_PATH "/home/honght/cuda/include")
set(CUDNN_LIBRARY_PATH "/home/honght/cuda/lib64/libcudnn.so")
find_package(Torch REQUIRED)

if(OpenMP_FOUND)
    message(STATUS "OpenMP found")
else()
    message(FATAL_ERROR "OpenMP not found") 
endif()

# Fast Mode
# set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OPENMP_C_FLAGS}  -Ofast -DNDEBUG ")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OPENMP_CXX_FLAGS} -Ofast -DNDEBUG -march=native -mtune=native -fopenmp-simd")
message(STATUS "CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}")
# set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OPENMP_CXX_FLAGS} -Ofast -DNDEBUG -march=native -mtune=native -fopenmp-simd")
    # set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OPENMP_C_FLAGS} -O3")
    # set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OPENMP_CXX_FLAGS} -O3")
# include_directories(${PYTHON3_INCLUDE_DIRS} ${NumPy_INCLUDE_DIRS})
# include_directories(${Python3_INCLUDE_DIRS} ${Python3_NumPy_INCLUDE_DIRS})
# include_directories(SYSTEM ${matplotlib_SOURCE_DIR})

include_directories(${OpenCV_INCLUDE_DIRS})
include_directories($(PROJECT_SOURCE_DIR)/src/BlochSim)
include_directories($(PROJECT_SOURCE_DIR)/src/M_voxel)
include_directories($(PROJECT_SOURCE_DIR)/src/FlowPhantom)
include_directories($(PROJECT_SOURCE_DIR)/src/SeqSimulator)
include_directories($(PROJECT_SOURCE_DIR)/src/SeqLoader)
include_directories($(PROJECT_SOURCE_DIR)/include)


add_subdirectory(src)
add_subdirectory(test)
